cust_loc<-read.csv("C:/Users/abhijay.ghildyal/Desktop/Assignments/R assignments/Datasets/Cust_Location.csv",header=T)
names(cust_loc)[1]<-"custid"
campaignData <- read.csv("C:/Users/abhijay.ghildyal/Desktop/Assignments/R assignments/Datasets/Campaign_data.csv", header = TRUE, na.strings=c("NA"))
campaignData<-campaignData[complete.cases(campaignData),]
campaignData<-data.frame(campaignData)
campaignData
campaignData[education=="tertiary",]
campaignData[campaignData$education=="tertiary",]
trans <- read.csv(file = "TransactionMaster.csv")
x <- runif(100)
x
oddcount(c(1,2,3,5,7,9,14))
----------------------------------
oddcount <- function(x) {
k <- 0  ## Assign the value 0 to k
for (n in x) {  ## Start a FOR loop for every element in x
if (n %% 2 == 1) k <- k + 1  ## %% is a modulo operator
}
return(k)
}
oddcount
oddcount(c(1,2,3,5,7,9,14))
oddcount <- function(x) {
k <- 0  ## Assign the value 0 to k
for (n in x) {  ## Start a FOR loop for every element in x
if (n %% 2 == 1) k <- k + 1  ## %% is a modulo operator
}
return(k)
}
oddcount(c(1,2,3,5,7,9,14))
vect<-c(c("1","2","3","4","5"),c("10","20","30","40","50"))
vect
count(gender)
gender<-c("Male","Female","Male","Female","Male")
gender.factor<-factor(gender)
# unique(gender.factor)
table(gender.factor)
library("plyr")
count(gender)
summary(gender)
table(gender.factor)
product<-as.character(c("hard Disk","Laptop Screen"))
id<-as.character(c("ID101","ID201"))
data1<-data.frame(id,product,stringsAsFactors =F)
str(data1)
data1
names(campaignData)
campaignData<-data.frame(campaignData)
for(i in 1:length(campaignData$custid)){
if(campaignData[i,]$age<30) { ag<-"Young"; }
else if(campaignData[i,]$age<=50) { ag<-"Middle"; }
else { ag<-"Old"; }
if(i==1) {ageGroup<-c(ag);}
else {ageGroup<-c(ageGroup,c(ag));}
}
ageGroup
campaignData<-cbind(campaignData,ageGroup)
campaignData
names(campaignData)
campaignData[1:10]$duration
names(campaignData)
campaignData[1:10]$duration
campaignData
campaignData$duration
campaignData[1:10]$duration
campaignData$duration[1:10]
campaignData$duration
onlyBlueCollarClients<-merge_dat_loc[which(merge_dat_loc$job=="blue-collar"),]
names(cust_loc)
names(campaignData)
merge_dat_loc<-merge(campaignData,cust_loc,by="custid")
names(merge_dat_loc)
which(merge_dat_loc$job
)
which(merge_dat_loc$job=="blue-collar")
count(onlyBlueCollarClients$State)
onlyBlueCollarClients<-merge_dat_loc[which(merge_dat_loc$job=="blue-collar"),]
)
onlyBlueCollarClients<-merge_dat_loc[which(merge_dat_loc$job=="blue-collar"),]
count(onlyBlueCollarClients$State)
sapply(campaignData,is.integer)
sapply(campaignData[,sapply(campaignData,is.integer)],summary)
sapply(sapply(campaignData,unique),count)
